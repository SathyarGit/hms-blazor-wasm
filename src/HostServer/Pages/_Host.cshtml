@page "/"
@using Microsoft.AspNetCore.Components.Web
@namespace HostServer.Pages
@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <base href="~/" />
    <link rel="stylesheet" href="css/bootstrap/bootstrap.min.css" />
    <link href="css/site.css" rel="stylesheet" />
    <link href="HostServer.styles.css" rel="stylesheet" />
    <link rel="icon" type="image/png" href="favicon.png"/>
    <link href="https://fonts.googleapis.com/css?family=Montserrat:300,400,500,700&display=swap" rel="stylesheet" />
    <link href="_content/MudBlazor/MudBlazor.min.css" rel="stylesheet" />
    <!-- This file is only needed (and apparently also only generated) if there are any Page or Component specific styles used. -->
    <!--<link href="FSH.BlazorWebAssembly.Client.styles.css" rel="stylesheet" />-->
    <link href="css/fsh.css" rel="stylesheet" />
    <link href="manifest.json" rel="manifest" />
    <link rel="apple-touch-icon" sizes="512x512" href="hotels-logo-41825.png" />
    <link rel="apple-touch-icon" sizes="192x192" href="hotels-logo-41825.png" />

    @*<component type="typeof(HeadOutlet)" render-mode="ServerPrerendered" />*@
    <component type="typeof(HeadOutlet)" render-mode="Server" />
</head>
<body>
    @*<component type="typeof(App)" render-mode="ServerPrerendered" />*@
    <component type="typeof(FSH.BlazorWebAssembly.Client.App)" render-mode="Server" />

    <div id="blazor-error-ui">
        <environment include="Staging,Production">
            An error has occurred. This application may no longer respond until reloaded.
        </environment>
        <environment include="Development">
            An unhandled exception has occurred. See browser dev tools for details.
        </environment>
        <a href="" class="reload">Reload</a>
        <a class="dismiss">🗙</a>
    </div>

    <script src="_framework/blazor.server.js"></script>
    <script src="_content/Microsoft.Authentication.WebAssembly.Msal/AuthenticationService.js"></script>
    <script src="_content/MudBlazor/MudBlazor.min.js"></script>
    <script>navigator.serviceWorker.register('service-worker.js');</script>

    <script>
        var themeManager = JSON.parse(window.localStorage.getItem("clientPreference"));
        var primaryColor = '#3eaf7c';
        var baseColor = '#ffffff';
        if (themeManager) {
            if (themeManager.PrimaryColor) {
                primaryColor = themeManager.PrimaryColor;
            }
            if (themeManager.IsDarkMode) {
                baseColor = '#1b1f22';
            }
        }
        var elements = document.getElementsByClassName('fsh-wasm');
        for (var i = 0; i < elements.length; i++) {
            elements[i].style.backgroundImage = 'linear-gradient(-120deg,' + primaryColor + ' 50%,' + baseColor + ' 50%)';
        }

        async function downloadFileFromStream(fileName, contentStreamReference) {
            const arrayBuffer = await contentStreamReference.arrayBuffer();
            const blob = new Blob([arrayBuffer]);
            const url = URL.createObjectURL(blob);

            triggerFileDownload(fileName, url);

            URL.revokeObjectURL(url);
        }

        function triggerFileDownload(fileName, url) {
            const anchorElement = document.createElement('a');
            anchorElement.href = url;
            anchorElement.download = fileName ?? '';
            anchorElement.click();
            anchorElement.remove();
        }
    </script>
</body>
</html>
